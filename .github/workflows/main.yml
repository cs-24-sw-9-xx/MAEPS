name: Unity Actions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}
 
### Refer to https://game.ci/docs/github/getting-started
jobs:
  test:
    permissions:
      checks: write
    name: Run all tests ✨
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-Test-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-Test-
            Library-

      - name: Cache .NET tools
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.dotnet/tools
          key: dotnet-tools-${{ runner.os }}-8.0
          restore-keys: |
            dotnet-tools-${{ runner.os }}

      - name: Cache Packages
        uses: actions/cache@v4
        with:
          path: Assets/Packages
          key: Packages-${{ runner.os }}-${{ hashFiles('Assets/NuGet.config') }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install NuGetForUnity.Cli
        run: dotnet tool install --global NuGetForUnity.Cli

      - name: Restore NuGet Packages for Unity Project
        run: nugetforunity restore .

      - uses: game-ci/unity-test-runner@v4
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          projectPath: .
          customParameters: --burst-disable-compilation -standaloneBuildSubtarget Player

      - uses: actions/upload-artifact@v4
        with:
          name: Test results (playmode)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
  
  test-player:
    permissions:
      checks: write
    name: Run Player tests ✨
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-Test-Player-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-Test-Player-
            Library-StandaloneLinux64-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
            Library-StandaloneLinux64-
            Library-

      - name: Cache .NET tools
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.dotnet/tools
          key: dotnet-tools-${{ runner.os }}-8.0
          restore-keys: |
            dotnet-tools-${{ runner.os }}

      - name: Cache Packages
        uses: actions/cache@v4
        with:
          path: Assets/Packages
          key: Packages-${{ runner.os }}-${{ hashFiles('Assets/NuGet.config') }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install NuGetForUnity.Cli
        run: dotnet tool install --global NuGetForUnity.Cli

      - name: Restore NuGet Packages for Unity Project
        run: nugetforunity restore .

      - uses: game-ci/unity-test-runner@v4
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          projectPath: .
          testMode: Standalone
          customParameters: --burst-disable-compilation -standaloneBuildSubtarget Player
  
  build:
    name: Build for ${{ matrix.targetPlatform.platform }}
    runs-on: ${{ matrix.targetPlatform.machine }}
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - { machine: ubuntu-latest, platform: StandaloneLinux64 }
          - { machine: windows-latest, platform: StandaloneWindows64 }
          # - { machine: macos-latest, platform: StandaloneOSX } # Macos has licensing issues for some reason
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform.platform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform.platform }}-
            Library-

      - name: Cache .NET tools
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.dotnet/tools
          key: dotnet-tools-${{ runner.os }}-8.0
          restore-keys: |
            dotnet-tools-${{ runner.os }}

      - name: Cache Packages
        uses: actions/cache@v4
        with:
          path: Assets/Packages
          key: Packages-${{ runner.os }}-${{ hashFiles('Assets/NuGet.config') }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install NuGetForUnity.Cli
        run: dotnet tool install --global NuGetForUnity.Cli

      - name: Restore NuGet Packages for Unity Project
        run: nugetforunity restore .

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform.platform }}
          projectPath: .
          customParameters: -standaloneBuildSubtarget Player

      - name: Delete debug info
        run: |
          ls "build/${{ matrix.targetPlatform.platform }}"
          rm -r "build/${{ matrix.targetPlatform.platform }}"/*DoNotShip/
          rm -r "build/${{ matrix.targetPlatform.platform }}"/*ButDontShipItWithYourGame/

      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform.platform }}
          path: build


  build-server:
    name: Build for Linux Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-StandaloneLinux64-Server-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-StandaloneLinux64-
            Library-

      - name: Cache .NET tools
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.dotnet/tools
          key: dotnet-tools-${{ runner.os }}-8.0
          restore-keys: |
            dotnet-tools-${{ runner.os }}

      - name: Cache Packages
        uses: actions/cache@v4
        with:
          path: Assets/Packages
          key: Packages-${{ runner.os }}-${{ hashFiles('Assets/NuGet.config') }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install NuGetForUnity.Cli
        run: dotnet tool install --global NuGetForUnity.Cli

      - name: Restore NuGet Packages for Unity Project
        run: nugetforunity restore .

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneLinux64
          projectPath: .
          customParameters: -standaloneBuildSubtarget Server

      - name: Delete debug info
        run: |
          rm -r build/StandaloneLinux64/*DoNotShip/
          rm -r build/StandaloneLinux64/*ButDontShipItWithYourGame/

      - uses: actions/upload-artifact@v4
        with:
          name: Build-StandaloneLinux64-Server
          path: build


  lint:
    name: Lint
    runs-on: ubuntu-latest
    container: unityci/editor:ubuntu-6000.0.37f1-linux-il2cpp-3
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install NuGetForUnity.Cli
        run: |
          dotnet tool install --global NuGetForUnity.Cli
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Restore NuGet Packages for Unity Project
        run: nugetforunity restore .

      - name: Generate Solution
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        run: |
          unity-editor -nographics -logFile /dev/stdout -quit -username "$UNITY_EMAIL" -password "$UNITY_PASSWORD" -serial "$UNITY_SERIAL"
          unity-editor -nographics -logFile /dev/stdout -customBuildName LinuxProjectFileBuild -projectPath . -executeMethod Packages.Rider.Editor.RiderScriptEditor.SyncSolution -quit

      - name: Format
        run: dotnet format MAEPS.sln --exclude "Assets/RosMessages/" --exclude "Assets/YamlDotNet/" --verify-no-changes

      - name: Check forbidden knowledge
        run: |
          unity-editor -nographics -logFile /dev/stdout -customBuildName LinuxProjectFileBuild -projectPath . -executeMethod Editor.ProjectAuditCI.AuditAndExport -quit

  build-data-processor:
    name: Build MAEPS Data Processor
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Cache .NET tools and packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.dotnet/tools
          key: dotnet-tools-${{ runner.os }}-8.0
          restore-keys: |
            dotnet-tools-${{ runner.os }}

      - name: Restore NuGet packages
        run: dotnet restore MAEPS-Data-Processor/MAEPS-Data-Processor.sln

      - name: Build Data Processor
        run: dotnet build MAEPS-Data-Processor/MAEPS-Data-Processor.sln --configuration Release --no-restore

      - name: Publish Data Processor
        run: dotnet publish MAEPS-Data-Processor/MAEPS.Data.Processor/MAEPS.Data.Processor.csproj --configuration Release --output publish-data-processor

      - uses: actions/upload-artifact@v4
        with:
          name: MAEPS-Data-Processor
          path: publish-data-processor
